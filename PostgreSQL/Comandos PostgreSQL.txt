Conectarse a la cuenta "postgres" bajo linux:
    sudo -i -u postgres
    sudo su - postgres

Para user psql en vscode desde el terminal, tendremos que guardar la variable de entorno
    export PSQL_EDITOR = 'code -w'

Conectarse a la cuenta "cris", al host "localhost" en el puerto "5432" a la DB 'test'
    psql -U cris -h 127.0.0.1 -p 5432 -d test

Creación de un usuario
    CREATE USER nombre_usuario WITH password '123456';

Eliminar usuario:
    DROP USER nombre_usuario;

Crear base de datos:
    CREATE DATABASE nombre_db WITH OWNER nombre_usuario;

Eliminar base de datos:
    DROP DATABASE nombre_db;

Acceder database con usuario x:
    psql -U nombre_usuario nombre_db;

Obtener ayuda:
    \h

Quit
    \q

Leer comandos desde un archivo:
    \i input.sql
    
Dump db a un archivo:
    $ pg_dump -U nombre_usuario nombre_db > db.out
    
Dump todas las bases de datos:
    $ sudo su - postgres
    $ pg_dumpall > /var/lib/pgsql/backups/dumpall.sql

Restaurar db:
    $ sudo su - postgres
    $ psql -f /var/lib/pgsql/backups/dumpall.sql mydb
También:
    $ psql -U postgres nombredb < archivo_restauracion.sql

List databases:
    \l

List tables in database:
    \d

Describe table:
    \d table_name

Describe table:
    \d+ table_name

Use database_name:
    \c nombre_db

Show users:
    select * from "pg_user";
    # también
    \du

Escribir las consultas en tu editor favorito:
    \e

Activar/Desactivar ver el tiempo del query:
    \timing

Reset a user password as admin:
    ALTER USER usertochange WITH password 'new_passwd';

Select version:
    SELECT version();
    
Change Database Owner:
    ALTER DATABASE database_name OWNER TO new_owner;

Create a superuser user:
    ALTER USER mysuper WITH SUPERUSER;
    # or even better
    ALTER USER mysuper WITH SUPERUSER CREATEDB CREATEROLE INHERIT LOGIN REPLICATION

Saber el tamaño usado las tablas en una base de datos:
    SELECT pg_size_pretty(pg_database_size('dbname'));
    #Ver mas: http://www.niwi.be/2013/02/17/postgresql-database-table-indexes-size/
    
Mostrar ayuda para backup
-------------------------
pg_dump -?
pg_restore -?
psql -?

Backup tipo custom
------------------
pg_dump -i -h localhost -p 5432 -U postgres -F c -b -v -f "RUTA.backup" NOMBRE_BD

-p, --port=PORT database server port number
-i, --ignore-version proceed even when server version mismatches
-h, --host=HOSTNAME database server host or socket directory
-U, --username=NAME connect as specified database user
-W, --password force password prompt (should happen automatically)
-d, --dbname=NAME connect to database name
-v, --verbose verbose mode
-F, --format=c|t|p output file format (custom, tar, plain text)
-c, --clean clean (drop) schema prior to create
-b, --blobs include large objects in dump
-v, --verbose verbose mode
-f, --file=FILENAME output file name


Restore tipo custom
-------------------
pg_restore -i -v -h localhost -p 5432 -U postgres -d NOMBRE_BD "RUTA.backup"

-p, --port=PORT database server port number
-i, --ignore-version proceed even when server version mismatches
-h, --host=HOSTNAME database server host or socket directory
-U, --username=NAME connect as specified database user
-W, --password force password prompt (should happen automatically)
-d, --dbname=NAME connect to database name
-v, --verbose verbose mode


Restore tipo custom y crear bd (creará la bd que se referencia dentro del backup y usa la bd postgres para conectarse)
----------------------------------------------------------------------------------------------------------------------
pg_restore -i -h localhost -p 5432 -U postgres -C -d postgres -v "RUTA.backup"

-p, --port=PORT database server port number
-i, --ignore-version proceed even when server version mismatches
-h, --host=HOSTNAME database server host or socket directory
-U, --username=NAME connect as specified database user
-W, --password force password prompt (should happen automatically)
-d, --dbname=NAME connect to database name
-v, --verbose verbose mode
-C, --create Create database


Backup tipo plain
-----------------
pg_dump -i -h localhost -p 5432 -U postgres -F p -b -v -f "RUTA.sql" NOMBRE_BD

-p, --port=PORT database server port number
-i, --ignore-version proceed even when server version mismatches
-h, --host=HOSTNAME database server host or socket directory
-U, --username=NAME connect as specified database user
-W, --password force password prompt (should happen automatically)
-d, --dbname=NAME connect to database name
-v, --verbose verbose mode
-F, --format=c|t|p output file format (custom, tar, plain text)
-c, --clean clean (drop) schema prior to create
-b, --blobs include large objects in dump
-v, --verbose verbose mode
-f, --file=FILENAME output file name


Restore tipo plain
------------------
psql -h localhost -p 5432 -U postgres -d NOMBRE_BD -f "RUTA.backup"

-p, --port=PORT database server port number
-h, --host=HOSTNAME database server host or socket directory
-U, --username=NAME connect as specified database user
-W, --password force password prompt (should happen automatically)
-d, --dbname=NAME connect to database name
-f, --file file
